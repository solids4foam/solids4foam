#!/bin/bash
cd ${0%/*} || exit 1    # run from this directory

echo
echo "filesToReplaceInOF/Allcheck"
echo

# Function for the checking and reporting how to fix file that needs to be fixed
# Arguments:
#   $1  - File name
#   $2  - Target path, without the file name and the slash at the end
#   $3  - Path to library to be re-built
#
checkAndReport()
{
    if cmp --silent "./${1}" "${2}/${1}"
    then
        echo "'${1}' has already been replaced"
        return 0
    else
        echo
        echo "******** PLEASE FIX THIS ***********"
        echo "You should replace the file '${2}/${1}' with 'filesToReplaceInOF/${1}'"
        echo
        echo "You can do it by running the following commands:"
        echo "    cp filesToReplaceInOF/${1} ${2}/"
        echo "    wmake libso ${3}"
        echo "************************************"
        echo
        return 1
    fi
}


# Different checks required for each version of OpenFOAM/foam
result=0
if [ "$WM_PROJECT" = "foam" ]
then
    # foam-extend-4.1 and newer
    echo "No checks for versions of foam-extend greater than 4.0"
    exit 0
else
    if [[ $WM_PROJECT_VERSION == v* ]]
    then
        # ESI OpenFOAM e.g. OpenFOAM-v1812, v1912, etc
        checkAndReport \
            "AMIInterpolation.C" \
            "$FOAM_SRC/meshTools/AMIInterpolation/AMIInterpolation" \
            "$FOAM_SRC/meshTools"
        if [ $? -ne 0 ]; then result=1; fi

        checkAndReport \
            "AMIInterpolation.H" \
            "$FOAM_SRC/meshTools/AMIInterpolation/AMIInterpolation" \
            "$FOAM_SRC/meshTools"
        if [ $? -ne 0 ]; then result=1; fi
    else
        echo "No checks for the Foundation version of OpenFOAM"
        exit 0;
    fi
fi

# If files check fails, then print error below
if [ "$result" -ne 0 ]
then
    echo
    echo "******** PLEASE FIX THIS ***********"
    echo "Please replace the files above"
    echo "************************************"
    echo
    exit 1
fi
