/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    "p|pFinal"
    {
        solver          GAMG;
        tolerance       1e-09;
        relTol          1e-3;
        minIter         1;
        maxIter         1000;
        smoother        GaussSeidel;
        nPreSweeps      0;
        nPostSweeps     2;
        nFinestSweeps   2;
        scaleCorrection true;
        directSolveCoarsest false;
        cacheAgglomeration true;
        nCellsInCoarsestLevel 20;
        agglomerator    faceAreaPair;
        mergeLevels     1;
    }

    cellMotionU
    {
        solver          GAMG;
        tolerance       1e-09;
        relTol          0.001;
        minIter         1;
        maxIter         100;
        smoother        GaussSeidel;
        nPreSweeps      0;
        nPostSweeps     2;
        nFinestSweeps   2;
        scaleCorrection true;
        directSolveCoarsest false;
        cacheAgglomeration true;
        nCellsInCoarsestLevel 20;
        agglomerator    faceAreaPair;
        mergeLevels     1;
    }

    "U|UFinal"
    {
        solver          PBiCG;
        preconditioner  DILU;
        tolerance       1e-09;
        relTol          0.001;
        minIter         1;
    }
}

PIMPLE
{
    //correctPhi          true;
    //checkMeshCourantNo  true;

    nOuterCorrectors            20;
    nCorrectors                 3;
    nNonOrthogonalCorrectors    1;

    residualControl
    {
        U
        {
            relTol 1e-7;
            tolerance 1e-7;
        }
    }
}

// ************************************************************************* //
