/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      mechanicalProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

planeStress     no;

mechanical
(
    rubber
    {
        type            MooneyRivlinElastic;

        rho             rho [1 -3 0 0 0 0 0] 1000;

        K               K [1 -1 -2 0 0 0 0] 1.410e+9;
		c10             c10 [1 -1 -2 0 0 0 0] 0.293e+6;
		c01             c01 [1 -1 -2 0 0 0 0] 0.177e+6;
		c11             c11 [1 -1 -2 0 0 0 0] 0;

        //// Or Ogden's law with equivalent material parameters
        //type            OgdenElastic;

        //rho             rho [1 -3 0 0 0 0 0] 1000;

        //K               K [1 -1 -2 0 0 0 0] 1.410e+9;
		//mu1             mu1 [1 -1 -2 0 0 0 0] 0.746e+6;
		//mu2             mu2 [1 -1 -2 0 0 0 0] -0.306e+6;
		//mu3             mu3 [1 -1 -2 0 0 0 0] 6.609e-5;
		//alpha1          alpha1 [0 0 0 0 0 0 0] 1.748;
		//alpha2          alpha2 [0 0 0 0 0 0 0] -1.656;
		//alpha3          alpha3 [0 0 0 0 0 0 0] 7.671;

		// To solve pressure Poisson equation
		solvePressureEqn		yes;

		// Pressure smoothing scale factor
		pressureSmoothingScaleFactor 100;
    }
);

// ************************************************************************* //
